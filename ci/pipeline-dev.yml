groups:
  - name: dev
    jobs:
      - build-rules-ui
      - deploy-dev
  - name: qa
    jobs:
      - deploy-qa
jobs:
  - name: build-rules-ui
    plan:
      - in_parallel:
          - get: source-git
            trigger: true
      - file: source-git/ci/build-ui.yml
        params:
          environment: dev
          file_prefix: ((project_key))
          proget_password: ((proget-password))
          proget_username: ((proget-user))
          project_name: ((project_name))
        task: build-rules-ui
      - params:
          build: ./
          dockerfile: source-git/ci/docker/rulesui-dockerfile
          tag_as_latest: true
          tag_file: source-git/ci/version.txt
        put: docker-nvcmp-rules-ui
  - name: deploy-dev
    plan:
      - get: docker-nvcmp-rules-ui
      - get: source-git
        passed:
          - build-rules-ui
        trigger: true
      - task: prepare-k8s
        image: docker-nvcmp-rules-ui
        config:
          platform: linux
          inputs:
            - name: source-git
          outputs:
            - name: source-git
          run:
            path: bash
            args:
              - -exc
              - |
                set -x
                apt-get update
                apt-get install -y git
                cd source-git
                DOCKER_TAG=$(git describe | awk -F- '{printf "V%s-%04d-%s", $1, $2, $3}')
                sed -i "s/:VERSION/:$DOCKER_TAG/" ci/k8s/dev/deployment.yaml
                cat ci/k8s/dev/deployment.yaml | grep "image:"
      - put: kubectl-deploy-dev
        params:
          file: source-git/ci/k8s/dev
          path: deployables
  - name: deploy-qa
    plan:
      - get: docker-nvcmp-rules-ui
      - get: source-git
        passed:
          - build-rules-ui
        trigger: false
      - task: prepare-k8s
        image: docker-nvcmp-rules-ui
        config:
          platform: linux
          inputs:
            - name: source-git
          outputs:
            - name: source-git
          run:
            path: bash
            args:
              - -exc
              - |
                set -x
                apt-get update
                apt-get install -y git
                cd source-git
                DOCKER_TAG=$(git describe | awk -F- '{printf "V%s-%04d-%s", $1, $2, $3}')
                sed -i "s/:VERSION/:$DOCKER_TAG/" ci/k8s/qae/deployment.yaml
                cat ci/k8s/qae/deployment.yaml | grep "image:"
      - put: kubectl-deploy-qae
        params:
          file: source-git/ci/k8s/qae
          path: deployables
resource_types:
  - name: concourse-kubectl
    type: docker-image
    source:
      password: ((proget-password))
      repository: ((proget-url))/docker/gito/concourse-kubectl-resource
      tag: latest
      username: ((proget-user))
resources:
  - name: docker-nvcmp-rules-ui
    type: docker-image
    icon: docker
    source:
      password: ((proget-password))
      repository: feeds.axadmin.net/docker/rms/nvcmp/rules-ui
      tag: latest
      username: ((proget-user))
  - name: kubectl-deploy-dev
    type: concourse-kubectl
    icon: kubernetes
    source:
      api_server_uri: ((dev-cluster.api-server))
      certificate_authority_data: ((dev-cluster.ca))
      namespace: rms-dev-nvcmp
      token: ((dev-cluster.token))
  - name: kubectl-deploy-qae
    type: concourse-kubectl
    icon: kubernetes
    source:
      api_server_uri: ((qae-cluster.api-server))
      certificate_authority_data: ((qae-cluster.ca))
      namespace: rms-qae-nvcmp
      token: ((qae-cluster.token))
  - name: source-git
    type: git
    icon: bitbucket
    source:
      branch: tanzu-dev
      private_key: ((novoCompliance.private-repo-key-ui))
      uri: ((git-uri))
